/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moneymanager;

import java.awt.Color;
import java.io.File;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;
import java.awt.Font;
import javax.swing.JTable;

/**
 * 
 * @author Shathin
 */
public class MainFrame extends javax.swing.JFrame {
    static int ieflag, catFlag;

    /**
     * Creates new form MainFrame
     */
    DefaultTableModel dtm, transferdtm, model, mst;
    public MainFrame() {
        initComponents();
        dtm = (DefaultTableModel)mainTable.getModel();
        transferdtm = (DefaultTableModel)transferTable.getModel();
        model = (DefaultTableModel)accountDetails.getModel();
        mst = (DefaultTableModel)miniStatementTable.getModel();
        setTitle("Money Manager");
       
        innerSubMainSplit.setEnabled(false);
        mainPane.setEnabled(false);
        subMainPane.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTab = new javax.swing.JTabbedPane();
        mainPane = new javax.swing.JSplitPane();
        inputPanel = new javax.swing.JPanel();
        incomeButton = new javax.swing.JButton();
        expenseButton = new javax.swing.JButton();
        categoryLabel = new javax.swing.JLabel();
        accountLabel = new javax.swing.JLabel();
        accountComboBox = new javax.swing.JComboBox<>();
        categoryComboBox = new javax.swing.JComboBox<>();
        amountLabel = new javax.swing.JLabel();
        amountTextField = new javax.swing.JTextField();
        rupeeLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        transferButton = new javax.swing.JButton();
        toAccountLabel = new javax.swing.JLabel();
        toAccountComboBox = new javax.swing.JComboBox<>();
        subMainPanel = new javax.swing.JPanel();
        innerSubMainSplit = new javax.swing.JSplitPane();
        innerSubMainPanel = new javax.swing.JPanel();
        subMainPane = new javax.swing.JSplitPane();
        mainScrollPane = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        transferTable = new javax.swing.JTable();
        transferNameTag = new javax.swing.JLabel();
        incomeExpenseNameTag = new javax.swing.JLabel();
        innerTotalDisplayPanel = new javax.swing.JPanel();
        incomeLabel = new javax.swing.JLabel();
        incomeAmountLabel = new javax.swing.JLabel();
        expenseLabel = new javax.swing.JLabel();
        expenseAmountLabel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        totalAmountLabel = new javax.swing.JLabel();
        statementPane = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        accountDetails = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        selectAccount = new javax.swing.JComboBox<>();
        generateStatement = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        miniStatementTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();
        startDateField = new javax.swing.JTextField();
        endDateLabel = new javax.swing.JLabel();
        endDateField = new javax.swing.JTextField();
        manageMainPanel = new java.awt.Panel();
        manageMainSplit = new javax.swing.JSplitPane();
        manageSubSplitLeft = new javax.swing.JSplitPane();
        accountPanel = new java.awt.Panel();
        addAccountLabel = new javax.swing.JLabel();
        deleteAccountLabel = new javax.swing.JLabel();
        chooseAccountComboBox = new javax.swing.JComboBox<>();
        addAccountButton = new javax.swing.JButton();
        deleteAccount = new javax.swing.JButton();
        accountNameField = new javax.swing.JTextField();
        accountInputLabel = new javax.swing.JLabel();
        chooseAccountLabel = new javax.swing.JLabel();
        resetPanel = new java.awt.Panel();
        resetButton = new javax.swing.JButton();
        manageSubSplitRight = new javax.swing.JSplitPane();
        incomeCategoryPanel = new java.awt.Panel();
        addIcomeCategoryLabel = new javax.swing.JLabel();
        addIncomeCategoryButton = new javax.swing.JButton();
        deleteIcomeCategoryButton = new javax.swing.JButton();
        chooseIcomeCategoryComboBox = new javax.swing.JComboBox<>();
        deleteIcomeCategoryLabel = new javax.swing.JLabel();
        addIncomeCategoryField = new javax.swing.JTextField();
        enterIncomeCategoryLabel = new javax.swing.JLabel();
        chooseIcomeCategoryLabel = new javax.swing.JLabel();
        expenseCategoryPanel = new java.awt.Panel();
        addExpenseCategoryLabel = new javax.swing.JLabel();
        enterExpenseCategoryLabel = new javax.swing.JLabel();
        addExpenseCategoryField = new javax.swing.JTextField();
        addExpenseCategoryButton = new javax.swing.JButton();
        deleteExpenseCategoryButton = new javax.swing.JButton();
        chooseExpenseCategoryComboBox = new javax.swing.JComboBox<>();
        chooseExpenseCategoryLabel = new javax.swing.JLabel();
        deleteExpenseCategoryLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainTab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mainTabFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mainTabFocusLost(evt);
            }
        });

        mainPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mainPane.setDividerLocation(550);
        mainPane.setDividerSize(2);
        mainPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        incomeButton.setText("Income ");
        incomeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                incomeButtonMouseClicked(evt);
            }
        });

        expenseButton.setText("Expense");
        expenseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expenseButtonMouseClicked(evt);
            }
        });

        categoryLabel.setText("Category");

        accountLabel.setText("Account");

        categoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBoxActionPerformed(evt);
            }
        });

        amountLabel.setText("Amount");

        rupeeLabel.setText("Rs.");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        transferButton.setText("Transfer");
        transferButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transferButtonMouseClicked(evt);
            }
        });

        toAccountLabel.setText("To Account");

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(incomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(expenseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(transferButton))
                .addGap(113, 113, 113)
                .addComponent(accountLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(categoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(toAccountLabel)
                .addGap(18, 18, 18)
                .addComponent(toAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(amountLabel)
                .addGap(14, 14, 14)
                .addComponent(rupeeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(submitButton)
                .addGap(156, 156, 156))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(incomeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(expenseButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(transferButton))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(accountLabel)
                            .addComponent(accountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amountLabel)
                            .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rupeeLabel)
                            .addComponent(submitButton)
                            .addComponent(toAccountLabel)
                            .addComponent(toAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryLabel)
                            .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        mainPane.setRightComponent(inputPanel);

        innerSubMainSplit.setDividerLocation(510);
        innerSubMainSplit.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        innerSubMainPanel.setForeground(new java.awt.Color(255, 255, 255));

        subMainPane.setDividerLocation(800);

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Account", "Category", "Amount", "Type"
            }
        ));
        mainTable.setGridColor(new java.awt.Color(0, 24, 52));
        mainScrollPane.setViewportView(mainTable);

        subMainPane.setTopComponent(mainScrollPane);

        transferTable.setBackground(new java.awt.Color(0, 24, 52));
        transferTable.setForeground(new java.awt.Color(255, 255, 255));
        transferTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "From Account", "To Account", "Amount"
            }
        ));
        transferTable.setGridColor(new java.awt.Color(0, 24, 52));
        jScrollPane1.setViewportView(transferTable);

        subMainPane.setRightComponent(jScrollPane1);

        transferNameTag.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        transferNameTag.setText("Transfer");

        incomeExpenseNameTag.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        incomeExpenseNameTag.setText("Income/Expense");

        javax.swing.GroupLayout innerSubMainPanelLayout = new javax.swing.GroupLayout(innerSubMainPanel);
        innerSubMainPanel.setLayout(innerSubMainPanelLayout);
        innerSubMainPanelLayout.setHorizontalGroup(
            innerSubMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, innerSubMainPanelLayout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(incomeExpenseNameTag)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 648, Short.MAX_VALUE)
                .addComponent(transferNameTag)
                .addGap(250, 250, 250))
            .addGroup(innerSubMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(subMainPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1395, Short.MAX_VALUE))
        );
        innerSubMainPanelLayout.setVerticalGroup(
            innerSubMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(innerSubMainPanelLayout.createSequentialGroup()
                .addGroup(innerSubMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incomeExpenseNameTag, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transferNameTag))
                .addGap(0, 477, Short.MAX_VALUE))
            .addGroup(innerSubMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, innerSubMainPanelLayout.createSequentialGroup()
                    .addGap(0, 29, Short.MAX_VALUE)
                    .addComponent(subMainPane, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        innerSubMainSplit.setTopComponent(innerSubMainPanel);

        incomeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        incomeLabel.setText("Income");

        incomeAmountLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        incomeAmountLabel.setText("incomeAmount");

        expenseLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expenseLabel.setText("Expense");

        expenseAmountLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expenseAmountLabel.setText("expenseAmount");

        totalLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalLabel.setText("Total");

        totalAmountLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalAmountLabel.setText("totalAmount");

        javax.swing.GroupLayout innerTotalDisplayPanelLayout = new javax.swing.GroupLayout(innerTotalDisplayPanel);
        innerTotalDisplayPanel.setLayout(innerTotalDisplayPanelLayout);
        innerTotalDisplayPanelLayout.setHorizontalGroup(
            innerTotalDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(innerTotalDisplayPanelLayout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(incomeLabel)
                .addGap(18, 18, 18)
                .addComponent(incomeAmountLabel)
                .addGap(260, 260, 260)
                .addComponent(expenseLabel)
                .addGap(18, 18, 18)
                .addComponent(expenseAmountLabel)
                .addGap(261, 261, 261)
                .addComponent(totalLabel)
                .addGap(18, 18, 18)
                .addComponent(totalAmountLabel)
                .addContainerGap(209, Short.MAX_VALUE))
        );
        innerTotalDisplayPanelLayout.setVerticalGroup(
            innerTotalDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(innerTotalDisplayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(innerTotalDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incomeLabel)
                    .addComponent(incomeAmountLabel)
                    .addComponent(expenseLabel)
                    .addComponent(expenseAmountLabel)
                    .addComponent(totalLabel)
                    .addComponent(totalAmountLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        innerSubMainSplit.setRightComponent(innerTotalDisplayPanel);

        javax.swing.GroupLayout subMainPanelLayout = new javax.swing.GroupLayout(subMainPanel);
        subMainPanel.setLayout(subMainPanelLayout);
        subMainPanelLayout.setHorizontalGroup(
            subMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(innerSubMainSplit)
        );
        subMainPanelLayout.setVerticalGroup(
            subMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(innerSubMainSplit, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
        );

        mainPane.setLeftComponent(subMainPanel);

        mainTab.addTab("Home", mainPane);

        statementPane.setDividerLocation(500);

        accountDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account ", "Current Balance"
            }
        ));
        jScrollPane2.setViewportView(accountDetails);

        statementPane.setLeftComponent(jScrollPane2);

        generateStatement.setText("Generate");
        generateStatement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateStatementMouseClicked(evt);
            }
        });

        miniStatementTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Type of Transaction", "Category", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        miniStatementTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(miniStatementTable);
        if (miniStatementTable.getColumnModel().getColumnCount() > 0) {
            miniStatementTable.getColumnModel().getColumn(0).setResizable(false);
            miniStatementTable.getColumnModel().getColumn(1).setResizable(false);
            miniStatementTable.getColumnModel().getColumn(2).setResizable(false);
            miniStatementTable.getColumnModel().getColumn(3).setResizable(false);
            miniStatementTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Mini Statement");

        jLabel2.setText("Account");

        startDateLabel.setText("Start Date");

        startDateField.setToolTipText("Enter Date in dd-mm-yyyy format");

        endDateLabel.setText("End Date");

        endDateField.setToolTipText("Enter Date in dd-mm-yyyy format");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startDateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(endDateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(generateStatement)))
                .addContainerGap(109, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(378, 378, 378))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(startDateLabel)
                        .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(endDateLabel)
                        .addComponent(endDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(generateStatement)
                        .addComponent(selectAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        statementPane.setRightComponent(jPanel1);

        mainTab.addTab("Mini Statement", statementPane);

        manageMainSplit.setDividerLocation(685);
        manageMainSplit.setEnabled(false);

        manageSubSplitLeft.setDividerLocation(315);
        manageSubSplitLeft.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        manageSubSplitLeft.setEnabled(false);

        addAccountLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addAccountLabel.setText("Add Account ");
        addAccountLabel.setToolTipText("");

        deleteAccountLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteAccountLabel.setText("Delete Account");

        addAccountButton.setText("Add Account");
        addAccountButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAccountButtonMouseClicked(evt);
            }
        });

        deleteAccount.setText("Delete Account");
        deleteAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteAccountMouseClicked(evt);
            }
        });

        accountInputLabel.setText("Account Name");

        chooseAccountLabel.setText("Choose Account");

        javax.swing.GroupLayout accountPanelLayout = new javax.swing.GroupLayout(accountPanel);
        accountPanel.setLayout(accountPanelLayout);
        accountPanelLayout.setHorizontalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteAccountLabel)
                    .addComponent(addAccountLabel))
                .addGap(60, 60, 60)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accountPanelLayout.createSequentialGroup()
                        .addComponent(chooseAccountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooseAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteAccount))
                    .addGroup(accountPanelLayout.createSequentialGroup()
                        .addComponent(accountInputLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(accountNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addAccountButton)))
                .addGap(131, 131, 131))
        );
        accountPanelLayout.setVerticalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAccountLabel)
                    .addComponent(addAccountButton)
                    .addComponent(accountNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountInputLabel))
                .addGap(89, 89, 89)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteAccountLabel)
                    .addComponent(chooseAccountComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteAccount)
                    .addComponent(chooseAccountLabel))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        manageSubSplitLeft.setTopComponent(accountPanel);

        resetButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resetButton.setText("Backup And Reset");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout resetPanelLayout = new javax.swing.GroupLayout(resetPanel);
        resetPanel.setLayout(resetPanelLayout);
        resetPanelLayout.setHorizontalGroup(
            resetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resetPanelLayout.createSequentialGroup()
                .addContainerGap(244, Short.MAX_VALUE)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(215, 215, 215))
        );
        resetPanelLayout.setVerticalGroup(
            resetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resetPanelLayout.createSequentialGroup()
                .addContainerGap(161, Short.MAX_VALUE)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );

        manageSubSplitLeft.setRightComponent(resetPanel);

        manageMainSplit.setLeftComponent(manageSubSplitLeft);

        manageSubSplitRight.setDividerLocation(315);
        manageSubSplitRight.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        manageSubSplitRight.setEnabled(false);
        manageSubSplitRight.setFocusable(false);

        addIcomeCategoryLabel.setText("Add Income Category Label");

        addIncomeCategoryButton.setText("Add Category");
        addIncomeCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addIncomeCategoryButtonMouseClicked(evt);
            }
        });

        deleteIcomeCategoryButton.setText("Delete Category");
        deleteIcomeCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteIcomeCategoryButtonMouseClicked(evt);
            }
        });

        deleteIcomeCategoryLabel.setText("Delete Income Category");

        enterIncomeCategoryLabel.setText("Enter Category Label");

        chooseIcomeCategoryLabel.setText("Choose Income Category");

        javax.swing.GroupLayout incomeCategoryPanelLayout = new javax.swing.GroupLayout(incomeCategoryPanel);
        incomeCategoryPanel.setLayout(incomeCategoryPanelLayout);
        incomeCategoryPanelLayout.setHorizontalGroup(
            incomeCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(incomeCategoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(incomeCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addIcomeCategoryLabel)
                    .addComponent(deleteIcomeCategoryLabel))
                .addGap(44, 44, 44)
                .addGroup(incomeCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(incomeCategoryPanelLayout.createSequentialGroup()
                        .addComponent(chooseIcomeCategoryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooseIcomeCategoryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(incomeCategoryPanelLayout.createSequentialGroup()
                        .addComponent(enterIncomeCategoryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addIncomeCategoryField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(incomeCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteIcomeCategoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addIncomeCategoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        incomeCategoryPanelLayout.setVerticalGroup(
            incomeCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(incomeCategoryPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(incomeCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addIcomeCategoryLabel)
                    .addComponent(addIncomeCategoryButton)
                    .addComponent(addIncomeCategoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterIncomeCategoryLabel))
                .addGap(89, 89, 89)
                .addGroup(incomeCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteIcomeCategoryLabel)
                    .addComponent(chooseIcomeCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteIcomeCategoryButton)
                    .addComponent(chooseIcomeCategoryLabel))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        manageSubSplitRight.setTopComponent(incomeCategoryPanel);

        addExpenseCategoryLabel.setText("Add Expense Category Label");

        enterExpenseCategoryLabel.setText("Enter Category Label");

        addExpenseCategoryButton.setText("Add Category");
        addExpenseCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addExpenseCategoryButtonMouseClicked(evt);
            }
        });

        deleteExpenseCategoryButton.setText("Delete Category");
        deleteExpenseCategoryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteExpenseCategoryButtonMouseClicked(evt);
            }
        });

        chooseExpenseCategoryLabel.setText("Choose Expense Category");

        deleteExpenseCategoryLabel.setText("Delete Expense Category");

        javax.swing.GroupLayout expenseCategoryPanelLayout = new javax.swing.GroupLayout(expenseCategoryPanel);
        expenseCategoryPanel.setLayout(expenseCategoryPanelLayout);
        expenseCategoryPanelLayout.setHorizontalGroup(
            expenseCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(expenseCategoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(expenseCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addExpenseCategoryLabel)
                    .addComponent(deleteExpenseCategoryLabel))
                .addGap(44, 44, 44)
                .addGroup(expenseCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(expenseCategoryPanelLayout.createSequentialGroup()
                        .addComponent(chooseExpenseCategoryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooseExpenseCategoryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(expenseCategoryPanelLayout.createSequentialGroup()
                        .addComponent(enterExpenseCategoryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addExpenseCategoryField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(expenseCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteExpenseCategoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addExpenseCategoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        expenseCategoryPanelLayout.setVerticalGroup(
            expenseCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(expenseCategoryPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(expenseCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addExpenseCategoryLabel)
                    .addComponent(addExpenseCategoryButton)
                    .addComponent(addExpenseCategoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterExpenseCategoryLabel))
                .addGap(89, 89, 89)
                .addGroup(expenseCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteExpenseCategoryLabel)
                    .addComponent(chooseExpenseCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteExpenseCategoryButton)
                    .addComponent(chooseExpenseCategoryLabel))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        manageSubSplitRight.setRightComponent(expenseCategoryPanel);

        manageMainSplit.setRightComponent(manageSubSplitRight);

        javax.swing.GroupLayout manageMainPanelLayout = new javax.swing.GroupLayout(manageMainPanel);
        manageMainPanel.setLayout(manageMainPanelLayout);
        manageMainPanelLayout.setHorizontalGroup(
            manageMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manageMainSplit, javax.swing.GroupLayout.PREFERRED_SIZE, 1375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        manageMainPanelLayout.setVerticalGroup(
            manageMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manageMainSplit, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainTab.addTab("Manage", manageMainPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTab, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainTabFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mainTabFocusGained
        
        
        accountPanel.setBackground(Color.LIGHT_GRAY);
        resetPanel.setBackground(Color.LIGHT_GRAY);
        incomeCategoryPanel.setBackground(Color.LIGHT_GRAY);
        expenseCategoryPanel.setBackground(Color.LIGHT_GRAY);
        
        
        dtm.setRowCount(0);
        transferdtm.setRowCount(0);
        accountComboBox.removeAllItems();
        categoryComboBox.removeAllItems();
        model.setRowCount(0);
        mst.setRowCount(0);
        mainTable.setFont(new Font("Serif", Font.PLAIN, 15));
        transferTable.setFont(new Font("Serif", Font.PLAIN, 15));
        accountDetails.setFont(new Font("Serif", Font.PLAIN, 15));
        miniStatementTable.setFont(new Font("Serif", Font.PLAIN, 15));
        mainTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        mainTable.setAutoResizeMode(JTable.HEIGHT);
        
        System.out.println("Main Tab Focus Gained! ");
        
        AppBrain.performKWayMerge();
        
        for(String[] rowArray : AppBrain.obtainArray(new File("files","displayFile.moneymanager"),"Main Table"))
        {
            if(rowArray[rowArray.length-1] == "Income")
            {
                setBackground(Color.GREEN);
                setForeground(Color.white);
                dtm.addRow(rowArray);
            }
            if(rowArray[rowArray.length-1] == "Expense")
            {
                setBackground(Color.red);
                setForeground(Color.white);
                dtm.addRow(rowArray);
            }
           
            dtm.addRow(rowArray);
        }
        
        for(String[] rowArray : AppBrain.obtainArray(new File("files","transfer.moneymanager"),"Transfer Table"))
            transferdtm.addRow(rowArray);
            
        for(String[] rowArray : AppBrain.obtainAccountBalance(new File("files","accounts.moneymanager")))
            model.addRow(rowArray);
        
        double income = AppBrain.calculateTotalIncome();
        double expense = AppBrain.calculateTotalExpense();
        incomeAmountLabel.setText(Double.toString(income));
        expenseAmountLabel.setText(Double.toString(expense));
        totalAmountLabel.setText(Double.toString(AppBrain.calculateTotal(income, expense)));
        
        accountComboBox.removeAllItems();
        for(String item : AppBrain.obtainAccounts())
            accountComboBox.addItem(item);
        
        chooseAccountComboBox.removeAllItems();
        for(String item : AppBrain.obtainAccounts())
            chooseAccountComboBox.addItem(item);
        
        chooseIcomeCategoryComboBox.removeAllItems();
        for(String item : AppBrain.obtainCategories(new File("files","incomeCategory.moneymanager")))
            chooseIcomeCategoryComboBox.addItem(item);
        
        chooseExpenseCategoryComboBox.removeAllItems();
        for(String item : AppBrain.obtainCategories(new File("files","expenseCategory.moneymanager")))
            chooseExpenseCategoryComboBox.addItem(item);
        
        selectAccount.removeAllItems();
        for(String i : AppBrain.obtainAccounts())
        {
            selectAccount.addItem(i);
        }
        
        toAccountComboBox.setVisible(false);
        toAccountLabel.setVisible(false);
        
        accountLabel.setVisible(false);
        accountComboBox.setVisible(false);
        categoryLabel.setVisible(false);
        categoryComboBox.setVisible(false);
        amountLabel.setVisible(false);
        rupeeLabel.setVisible(false);
        amountTextField.setVisible(false);
        submitButton.setVisible(false);
    }//GEN-LAST:event_mainTabFocusGained

    private void incomeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_incomeButtonMouseClicked
        System.out.println("Income Button Clicked");
        
        toAccountComboBox.setVisible(false);
        toAccountLabel.setVisible(false);
        accountLabel.setText("Account");
        toAccountComboBox.removeAllItems();
        categoryComboBox.setVisible(true);
        categoryLabel.setVisible(true);
        accountLabel.setVisible(true);
        accountComboBox.setVisible(true);
        categoryLabel.setVisible(true);
        categoryComboBox.setVisible(true);
        amountLabel.setVisible(true);
        rupeeLabel.setVisible(true);
        amountTextField.setVisible(true);
        submitButton.setVisible(true);
        
        categoryLabel.setText("Income Category");
        categoryComboBox.removeAllItems();
        for(String item : AppBrain.obtainCategories(new File("files","incomeCategory.moneymanager")))
            categoryComboBox.addItem(item);
        ieflag=1;
        catFlag = 1;
    }//GEN-LAST:event_incomeButtonMouseClicked

    private void mainTabFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mainTabFocusLost
        System.out.println("Main Tab Out of Focus!");
    }//GEN-LAST:event_mainTabFocusLost

    private void expenseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expenseButtonMouseClicked
        System.out.println("Expense Button Clicked");
        
        toAccountComboBox.setVisible(false);
        toAccountLabel.setVisible(false);
        accountLabel.setText("Account");
        toAccountComboBox.removeAllItems();
        categoryComboBox.setVisible(true);
        categoryLabel.setVisible(true);
        accountLabel.setVisible(true);
        accountComboBox.setVisible(true);
        categoryLabel.setVisible(true);
        categoryComboBox.setVisible(true);
        amountLabel.setVisible(true);
        rupeeLabel.setVisible(true);
        amountTextField.setVisible(true);
        submitButton.setVisible(true);
        accountLabel.setText("Account");
        toAccountComboBox.removeAllItems();
        categoryComboBox.setVisible(true);
        categoryLabel.setVisible(true);
        
        categoryLabel.setText("Expense Category");
        categoryComboBox.removeAllItems();
        for(String item : AppBrain.obtainCategories(new File("files","expenseCategory.moneymanager")))
            categoryComboBox.addItem(item);
        ieflag = 0;
        catFlag = 0;
    }//GEN-LAST:event_expenseButtonMouseClicked

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        System.out.println("Submit Button Clicked");
        String date = String.valueOf(java.time.LocalDate.now().format(DateTimeFormatter.ofPattern("dd-MM-yyyy")));
        String time = String.valueOf(java.time.LocalTime.now().format(DateTimeFormatter.ofPattern("HH:mm")));
        String account = String.valueOf(accountComboBox.getSelectedItem());
        double amount=0;
            try{
                amount = Double.parseDouble(amountTextField.getText());
            }
            catch(Exception e){
                System.out.println("Exception found in submitButtonActionPerformed! "+e);
            }
        if(ieflag == 1)
        {   
            String category = String.valueOf(categoryComboBox.getSelectedItem());
            AppBrain.insertIncome(date, time, account, category, amount);
            dtm.addRow(new String[] {date,time,account,category,String.valueOf(amount),"Income"});
        }
        if(ieflag == 0)
        {
            String category = String.valueOf(categoryComboBox.getSelectedItem());
            if(AppBrain.checkAccountBalance(account, amount) == true){
                AppBrain.insertExpense(date, time, account, category, amount);
                dtm.addRow(new String[] {date,time,account,category,String.valueOf(amount),"Expense"});
            }
        }
        if(ieflag == 2){
             String toAccount = String.valueOf(toAccountComboBox.getSelectedItem());
             if(AppBrain.checkAccountBalance(account, amount) == true){
                AppBrain.doTransfer(date, time, account, toAccount, amount);
                transferdtm.addRow(new String[] {date,time,account,toAccount,String.valueOf(amount)});
            }
        }
        
        double income = AppBrain.calculateTotalIncome();
        double expense = AppBrain.calculateTotalExpense();
        incomeAmountLabel.setText(Double.toString(income));
        expenseAmountLabel.setText(Double.toString(expense));
        totalAmountLabel.setText(Double.toString(AppBrain.calculateTotal(income, expense)));
        
    }//GEN-LAST:event_submitButtonActionPerformed

    private void transferButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transferButtonMouseClicked
        System.out.println("Transfer Button Clicked");
        toAccountComboBox.setVisible(true);
        toAccountLabel.setVisible(true);
        accountLabel.setText("From Account");
        toAccountComboBox.removeAllItems();
        categoryComboBox.setVisible(false);
        categoryLabel.setVisible(false);
        for(String item : AppBrain.obtainAccounts())
            toAccountComboBox.addItem(item);
        ieflag = 2;
        
    }//GEN-LAST:event_transferButtonMouseClicked

    private void generateStatementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateStatementMouseClicked
        // TODO add your handling code here:
        mst.setRowCount(0);
        String account = String.valueOf(selectAccount.getSelectedItem());
        String startDate = startDateField.getText();
        String endDate = endDateField.getText();
        AppBrain.generateMiniStatement(account);
        if(startDate.isEmpty() && endDate.isEmpty()){
            for(String[] rowArray : AppBrain.obtainArray(new File("files","miniStatement.moneymanager"),"MiniStatement Table")){
                mst.addRow(rowArray);
            }
        }
        if(!startDate.isEmpty() && !endDate.isEmpty()){
            for(String[] rowArray : AppBrain.obtainMiniStatementByDate(startDate, endDate)){
                for(String s : rowArray){
                   if(s != null){
                        mst.addRow(rowArray);
                        break;
                   }
                   else
                       break;
                }
            }
        }
        if(!startDate.isEmpty() && endDate.isEmpty()){
            String date = String.valueOf(java.time.LocalDate.now().format(DateTimeFormatter.ofPattern("dd-dd-yyyy")));
            for(String[] rowArray : AppBrain.obtainMiniStatementByDate(startDate, date)){
                    for(String s : rowArray){
                   if(s != null){
                        mst.addRow(rowArray);
                        break;
                   }
                   else
                       break;
                }
            }
        }
        
        if(startDate.isEmpty() && !endDate.isEmpty()){
            String date = "01-01-0001";
            for(String[] rowArray : AppBrain.obtainMiniStatementByDate(date, endDate)){
                    for(String s : rowArray){
                   if(s != null){
                        mst.addRow(rowArray);
                        break;
                   }
                   else
                       break;
                }
            }
        }
            
    }//GEN-LAST:event_generateStatementMouseClicked

    private void categoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryComboBoxActionPerformed

    private void addIncomeCategoryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addIncomeCategoryButtonMouseClicked
        // TODO add your handling code here:
        String newIncome = addIncomeCategoryField.getText();
        AppBrain.addIncomeCategory(newIncome);
        chooseIcomeCategoryComboBox.removeAllItems();
        for(String item : AppBrain.obtainCategories(new File("files","incomeCategory.moneymanager"))){
            System.out.println(item);
            chooseIcomeCategoryComboBox.addItem(item);
            
        }
        addIncomeCategoryField.removeAll();
        
    }//GEN-LAST:event_addIncomeCategoryButtonMouseClicked

    private void deleteIcomeCategoryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteIcomeCategoryButtonMouseClicked
        // TODO add your handling code here:
        String chosenCategory = chooseIcomeCategoryComboBox.getSelectedItem().toString();
        AppBrain.deleteIncomeCategory(chosenCategory);
        chooseIcomeCategoryComboBox.removeAllItems();
        for(String item : AppBrain.obtainCategories(new File("files","incomeCategory.moneymanager")))
            chooseIcomeCategoryComboBox.addItem(item);
    }//GEN-LAST:event_deleteIcomeCategoryButtonMouseClicked

    private void addAccountButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAccountButtonMouseClicked
        // TODO add your handling code here:
        String accountName = accountNameField.getText();
        AppBrain.addAccount(accountName);
        chooseAccountComboBox.removeAllItems();
        for(String i : AppBrain.obtainAccounts())
        {
            chooseAccountComboBox.addItem(i);
        }
        
    }//GEN-LAST:event_addAccountButtonMouseClicked

    private void deleteAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteAccountMouseClicked
        // TODO add your handling code here:
        String accountSelected = chooseAccountComboBox.getSelectedItem().toString();
        AppBrain.deleteAccount(accountSelected);
        chooseAccountComboBox.removeAllItems();
        for(String i : AppBrain.obtainAccounts())
        {
            chooseAccountComboBox.addItem(i);
        }
    }//GEN-LAST:event_deleteAccountMouseClicked

    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonMouseClicked
        // TODO add your handling code here:
        AppBrain.reset();
    }//GEN-LAST:event_resetButtonMouseClicked

    private void addExpenseCategoryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addExpenseCategoryButtonMouseClicked
        // TODO add your handling code here:
        String newExpense = addExpenseCategoryField.getText();
        AppBrain.addExpenseCategory(newExpense);
        chooseExpenseCategoryComboBox.removeAllItems();
        for(String item : AppBrain.obtainCategories(new File("files","expenseCategory.moneymanager"))){
            System.out.println(item);
            chooseExpenseCategoryComboBox.addItem(item);
            
        }
        addExpenseCategoryField.removeAll();
        
    }//GEN-LAST:event_addExpenseCategoryButtonMouseClicked

    private void deleteExpenseCategoryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteExpenseCategoryButtonMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_deleteExpenseCategoryButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
                AppBrain.generateMiniStatement("Bank");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accountComboBox;
    private javax.swing.JTable accountDetails;
    private javax.swing.JLabel accountInputLabel;
    private javax.swing.JLabel accountLabel;
    private javax.swing.JTextField accountNameField;
    private java.awt.Panel accountPanel;
    private javax.swing.JButton addAccountButton;
    private javax.swing.JLabel addAccountLabel;
    private javax.swing.JButton addExpenseCategoryButton;
    private javax.swing.JTextField addExpenseCategoryField;
    private javax.swing.JLabel addExpenseCategoryLabel;
    private javax.swing.JLabel addIcomeCategoryLabel;
    private javax.swing.JButton addIncomeCategoryButton;
    private javax.swing.JTextField addIncomeCategoryField;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField amountTextField;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JComboBox<String> chooseAccountComboBox;
    private javax.swing.JLabel chooseAccountLabel;
    private javax.swing.JComboBox<String> chooseExpenseCategoryComboBox;
    private javax.swing.JLabel chooseExpenseCategoryLabel;
    private javax.swing.JComboBox<String> chooseIcomeCategoryComboBox;
    private javax.swing.JLabel chooseIcomeCategoryLabel;
    private javax.swing.JButton deleteAccount;
    private javax.swing.JLabel deleteAccountLabel;
    private javax.swing.JButton deleteExpenseCategoryButton;
    private javax.swing.JLabel deleteExpenseCategoryLabel;
    private javax.swing.JButton deleteIcomeCategoryButton;
    private javax.swing.JLabel deleteIcomeCategoryLabel;
    private javax.swing.JTextField endDateField;
    private javax.swing.JLabel endDateLabel;
    private javax.swing.JLabel enterExpenseCategoryLabel;
    private javax.swing.JLabel enterIncomeCategoryLabel;
    private javax.swing.JLabel expenseAmountLabel;
    private javax.swing.JButton expenseButton;
    private java.awt.Panel expenseCategoryPanel;
    private javax.swing.JLabel expenseLabel;
    private javax.swing.JButton generateStatement;
    private javax.swing.JLabel incomeAmountLabel;
    private javax.swing.JButton incomeButton;
    private java.awt.Panel incomeCategoryPanel;
    private javax.swing.JLabel incomeExpenseNameTag;
    private javax.swing.JLabel incomeLabel;
    private javax.swing.JPanel innerSubMainPanel;
    private javax.swing.JSplitPane innerSubMainSplit;
    private javax.swing.JPanel innerTotalDisplayPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane mainPane;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JTabbedPane mainTab;
    private javax.swing.JTable mainTable;
    private java.awt.Panel manageMainPanel;
    private javax.swing.JSplitPane manageMainSplit;
    private javax.swing.JSplitPane manageSubSplitLeft;
    private javax.swing.JSplitPane manageSubSplitRight;
    private javax.swing.JTable miniStatementTable;
    private javax.swing.JButton resetButton;
    private java.awt.Panel resetPanel;
    private javax.swing.JLabel rupeeLabel;
    private javax.swing.JComboBox<String> selectAccount;
    private javax.swing.JTextField startDateField;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JSplitPane statementPane;
    private javax.swing.JSplitPane subMainPane;
    private javax.swing.JPanel subMainPanel;
    private javax.swing.JButton submitButton;
    private javax.swing.JComboBox<String> toAccountComboBox;
    private javax.swing.JLabel toAccountLabel;
    private javax.swing.JLabel totalAmountLabel;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JButton transferButton;
    private javax.swing.JLabel transferNameTag;
    private javax.swing.JTable transferTable;
    // End of variables declaration//GEN-END:variables
}
